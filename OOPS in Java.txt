..................................oops.............................................

* In java write everything inside a class so there is no function we call it as a methods


////////////////////////////////////////////////////////////////////////////

 void is an written type 

public static void add()----------->(this add is an identifier){
	
}


 void function/non void function 

void :
 with or without parameter
 public static void add() {

}

Non Void :

 with or without parameter
 public static int add(){
 return c;
	
}
/////////////////////////////////////////////////////////////////////////


* Recurstion:

function calling itsself	

public static void nanumber(int n){

if(n==1){

}else{

system.out.println(n)
nanumber(n:n-1);

}

///////////////////////////////////////////////////////////////////////

*class and objects

eg(student application from

-------------> form template is called as class

-------------> form i filled for me as object
)

object is called as intense of class

inside of an class the methods and variables

a thing inside an class is members of class


///////////////////////////////////////////////////////////////////////////

Acces Modifiers

private can be access inside the class only when you want to view it use getter and setter


//////////////////////////////////////////////////////////////////////////////////

constructors

the class namw will be the constructor name


///////////////////////////////////////////////////////////////////////////////

Abstraction


hiding the implimentation details only showing the essantial functionality or feautures to the user

eg(cars ,laptop)
////////////////////////////////////////////////////////////////////////////


Encapsulation


Binding data members and methods into single entity

eg(tablet)


///////////////////////////////////////////////////////////////////////////

inheritance

it which one class allow the inherit the features (field , methods) to another class

eg(animal....../lion,tiger)

///////////////////////////////////////////////////////////////////

Polymorphism:

method as many forms is defined as .......

///////////////////////////////////////////////////////////////////////












